apiVersion: v1
kind: ConfigMap
metadata:
  name: kepler-model-server-cfm
  namespace: kepler
data:
  MODEL_PATH: models
  PROM_SERVER: 'http://prometheus-k8s.monitoring.svc.cluster.local:9090'
  PROM_QUERY_INTERVAL: '20'
  PROM_QUERY_STEP: '3'
  PROM_HEADERS: ''
  PROM_SSL_DISABLE: 'true'
  MNT_PATH: /mnt
  INITIAL_MODELS_LOC: https://raw.githubusercontent.com/sustainable-computing-io/kepler-model-server/main/tests/test_models
  INITIAL_MODEL_NAMES: |
    AbsComponentModelWeight=KerasCompWeightFullPipeline
    AbsComponentPower=KerasCompFullPipeline
    DynComponentPower=ScikitMixed
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kepler-model-server-pv
  labels:
    type: local
    app.kubernetes.io/component: kepler-model-server-pv
    app.kubernetes.io/name: kepler-model-server-pv
spec:
  storageClassName: default
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kepler-model-server-pvc
  namespace: kepler
spec:
  storageClassName: default
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kepler-model-server
  namespace: kepler
  labels:
    app.kubernetes.io/component: model-server
    app.kubernetes.io/name: kepler-model-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: model-server
      app.kubernetes.io/name: kepler-model-server
  template:
    metadata:
      labels:
        app.kubernetes.io/component: model-server
        app.kubernetes.io/name: kepler-model-server
    spec:
      volumes:
      - name: mnt
        persistentVolumeClaim:
          claimName: kepler-model-server-pvc
      - name: cfm
        configMap:
          name: kepler-model-server-cfm
      containers:
      - name: server-api
        image: quay.io/sustainable_computing_io/kepler_model_server:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8100
        volumeMounts:
          - name: mnt
            mountPath: /mnt
          - name: cfm
            mountPath: /etc/kepler/kepler.config
            readOnly: true
        command: ["python3.8",  "model_server.py"]
---
kind: Service
apiVersion: v1
metadata:
  name: kepler-model-server
  namespace: kepler
  labels:
    app.kubernetes.io/component: model-server
    app.kubernetes.io/name: kepler-model-server
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/component: model-server
    app.kubernetes.io/name: kepler-model-server
  ports:
  - name: http
    port: 8100
    targetPort: http